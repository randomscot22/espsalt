esphome:
  name: saltmonitor
  friendly_name: saltmonitor

rp2040:
  board: rpipicow
  framework:
    # Required until https://github.com/platformio/platform-raspberrypi/pull/36 is merged
    platform_version: https://github.com/maxgerhardt/platform-raspberrypi.git

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "<your key>"

ota:
  - platform: esphome
    password: "<your key>"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.1.32
    gateway: 192.168.1.1
    subnet: 255.255.255.0
  # Enable fallback hotspot in case wifi connection fails
  ap:
    ssid: "Saltmonitor Fallback Hotspot"
    password: "<your key>"

globals:
  - id: max_salt_distance
    type: float
    initial_value: '0.34'
    restore_value: yes
  - id: min_salt_distance
    type: float
    initial_value: '0.11'
    restore_value: yes

#i2c connections:
# i2c_0 = I2C(id=0, sda=Pin(16), scl=Pin(17))
# i2c_1 = I2C(id=1, sda=Pin(14), scl=Pin(15))
i2c:
- id: bus_a
  sda: 16
  scl: 17
  scan: True
- id: bus_b
  sda: 14
  scl: 15
  scan: True

sensor:

  - platform: uptime
    name: Uptime

  - platform: wifi_signal
    name: WiFi Signal
    update_interval: 60s
 
  - platform: vl53l0x
    name: "Salt Distance right"
    id: salt_distance_right
    address: 0x29
    update_interval: 60s
    long_range: true
    i2c_id: bus_a
    unit_of_measurement: "m"
 
  - platform: vl53l0x
    name: "Salt Distance left"
    id: salt_distance_left
    address: 0x29
    update_interval: 60s
    long_range: true
    i2c_id: bus_b
    unit_of_measurement: "m"
  
  - platform: template
    name: "Salt Level Left"
    id: salt_level_left_percentage
    update_interval: 60s
    state_class: measurement
    unit_of_measurement: '%'
    accuracy_decimals: 0
    lambda: |-
      if(id(salt_distance_left).state <= id(min_salt_distance)) {
          return 100;
      }
      if(id(salt_distance_left).state >= id(max_salt_distance)) {
          return 0;
      }  
      return (100-((id(salt_distance_left).state - id(min_salt_distance)) * 100) / (id(max_salt_distance) - id(min_salt_distance)));
  - platform: template
    name: "Salt Level Right"
    id: salt_level_right_percentage
    update_interval: 60s
    state_class: measurement
    unit_of_measurement: '%'
    accuracy_decimals: 0
    lambda: |-
      if(id(salt_distance_right).state <= id(min_salt_distance)) {
          return 100;
      }
      if(id(salt_distance_right).state >= id(max_salt_distance)) {
          return 0;
      }  
      return (100-((id(salt_distance_right).state - id(min_salt_distance)) * 100) / (id(max_salt_distance) - id(min_salt_distance)));
     # return ((id(salt_distance_right).state - id(min_salt_distance)) * 100) / (id(max_salt_distance) - id(min_salt_distance));

  
